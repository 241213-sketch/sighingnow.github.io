# GitHub Pages용 Jekyll 사이트를 빌드하고 배포하는 샘플 워크플로
name: Deploy Jekyll site to Pages

on:
  # 'main' 브랜치로 코드가 push 될 때마다 실행됩니다.
  push:
    branches: ["main"] # (만약 본인 브랜치 이름이 'master'라면 "master"로 수정)

  # Actions 탭에서 수동으로 실행할 수 있게 합니다.
  workflow_dispatch:

# GITHUB_TOKEN에 GitHub Pages 배포 권한을 설정합니다.
permissions:
  contents: read
  pages: write
  id-token: write

# 동시 배포를 하나만 허용하도록 설정합니다.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # 빌드 작업
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' # 웬만한 Jekyll 테마는 3.0 버전이면 잘 돌아갑니다.
          bundler-cache: true # 빌드 속도 향상
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # _config.yml에 지정된 remote_theme을 사용합니다.
        run: bundle exec jekyll build --source . --destination ./_site
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  # 배포 작업
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # 'build' 작업이 끝나야 실행됨
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
